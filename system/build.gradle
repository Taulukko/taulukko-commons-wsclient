//use command "gradle build" to build-in
//use command "gradle eclipse"to build eclipse files
//use command "gradle -1 taskname" to run a especific task 

apply plugin : 'java'
apply plugin: 'eclipse-wtp' 
apply plugin: 'download-task' //adiciona o comando download 

  
targetCompatibility=1.7
sourceCompatibility=1.7
 
 
 /*
 
 add(new org.apache.ivy.plugins.resolver.URLResolver()) {
            name = 'GitHub'
            addArtifactPattern 'http://cloud.github.com/downloads/[organisation]/[module]/[module]-[revision].[ext]'
        }
        
 
 */
 
//PROPERTIES
version = '1.0'
//version = '1.0-SNAPSHOT'
group = 'taulukko-commons'
jar.baseName =  group + '-wsclient'  
    
eclipse 
{
	project 
	{
		name = jar.baseName
		comment = 'Taulukko Commons Web Service Client'
   }
}

 
buildscript {
	
	
 	//EXT PROPERTIES
	ext {
		taulukkoRootPath =  System.properties['user.home'] 
    	localRepoPath = taulukkoRootPath + "/.local-repo"
	}
    repositories {
        mavenCentral()
    }
    dependencies {
		//adiciona task download e comando download como dependencia do script
        classpath 'de.undercouch:gradle-download-task:1.0' 
    }
}

defaultTasks 'help'
 

task help << {
	println 'gradle <task> '
	println 'task: <eclipse>  | <build> | <updateRemote> '
	println 'eclipse: create eclipse project files'
	println 'build: compile project '
	println 'updateRemote: download remote references to local repository'
	println 'cleanLocal: delete local repository'
}

task cleanLocal << {  
	println 'Cleanup local repository'

	def localRepo = new File(localRepoPath)
	
	localRepo.deleteDir() 
	
	
}

task createLocalRepo << {
	def localRepo = new File(localRepoPath)
	if(!localRepo.exists())
	{
		tasks.updateRemote.execute()
	}	
	copy{
	 	into localRepoPath  
    	from "$buildDir/libs" 
	}
}

task updateRemote << {
		tasks.cleanLocal.execute()
    	tasks.downloadRemote.execute()
    	tasks.unzipRemoteRepo.execute()
    	tasks.deleteRemoteZipFile.execute()
}


task downloadRemote << {
		println 'Download remote dependencies to ' + taulukkoRootPath
		download {
	        src 'http://www.evon.com.br/remoterepo/remote-repo.zip'
    	    dest taulukkoRootPath
    	}
}
 
task unzipRemoteRepo<<  {

	println 'Unpack remote dependencies to ' + localRepoPath

	copy{
   		from(zipTree("$taulukkoRootPath/remote-repo.zip"))
   		into(taulukkoRootPath)
	}
}
 
task deleteRemoteZipFile(type: Delete) {
   delete "$taulukkoRootPath/remote-repo.zip"
}
 

build.dependsOn createLocalRepo
//test.dependsOn deployServerTest

repositories {
  mavenCentral()
  flatDir dirs : [localRepoPath]
}

 /*
test {
    exclude '** /*IntegrationTest*'
}

task integrationTest(type: Test) {
    include '** /*IntegrationTest*'
    doFirst {
        jettyRun.httpPort = 8080    // Port for test
        jettyRun.daemon = true
        jettyRun.execute()
    }
    doLast {
        jettyStop.stopPort = 8091   // Port for stop signal
        jettyStop.stopKey = 'stopKey'
        jettyStop.execute()
    }
}*/

dependencies
{
	//teste
	//compile 'taulukko.commons:taulukko-commons-lang:2.3.2@jar'

	//apache commons
	compile 'org.apache.httpcomponents:httpclient:4.3.+' 
	//compile 'javax:javaee-web-api:6.0'

	//TOMCAT
	 
	compile 'org.apache.tomcat.embed:tomcat-embed-core:8.0.12'
	compile 'org.apache.tomcat.embed:tomcat-embed-logging-juli:8.0.12'
	compile 'org.apache.tomcat.embed:tomcat-embed-jasper:8.0.12'
	compile 'org.apache.tomcat:tomcat-jasper:8.0.12'
	compile 'org.apache.tomcat:tomcat-jasper-el:8.0.12'
	compile 'org.apache.tomcat:tomcat-jsp-api:8.0.12'
	 
	//junit
	testCompile "junit:junit:+"

}
 
 